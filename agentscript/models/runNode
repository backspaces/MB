#!/usr/bin/env node

const esmImport = require('esm')(module)
const str = process.argv[2] || 'hello'
const className = str.charAt(0).toUpperCase() + str.slice(1) + 'Model'

console.log('Running', className)

const Model = esmImport(`./${className}.js`).default
const util = esmImport('../src/util.js').default
const model = new Model()

async function run() {
    await model.startup()
    model.setup()
    await util.timeoutLoop(() => {
        model.step()
        model.tick()
    }, 500)
    const sample = util.sampleModel(model)
    console.log(sample)
}
run().catch(e => {
    console.log(`\n!Error: ${className} failed to run: ${e}\n`)
})

// try {
//     model.startup().then(() => {
//         model.setup()
//         util.repeat(500, () => {
//             model.step()
//             model.tick()
//         })
//     })
//     const sample = util.sampleModel(model)
//     console.log(sample)
// } catch (error) {
//     console.log(`!Error: ${className} failed to run: ${error}`)
// }
