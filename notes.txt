
----+----1----+----2----+----3----+----4----+----5----+----6----+----7
Commits:
......................................................................
......................................................................
......................................................................
turf.distance([west,north], [east, south])
  test rel to gis module

......................................................................
is geojson fetchable from mb layers?
Canvas BBox: Four geographical coordinates, represented as arrays of longitude and latitude numbers, which define the corners of the image. The coordinates start at the top left corner of the image and proceed in clockwise order. They do not have to represent a rectangle.
    coordinates: [
        [west, north],
        [east, north],
        [east, south],
        [west, south],
    ],

......................................................................
todo
- solve async problem w/ node stdin/out
  - update addPopulation to use stdin/out, po
- states: finer detail
  - usstates.geojson 87K, us_040_00_20m.json 1.4MB, 5m 2.4MB?
- counties: featureState seems backwards!
- find source for all data/ files, put in npm run scripts

Benny: https://dev.simtable.com/ASM/ft-epidemic-map/NewMexicoSIR/

https://docs.mapbox.com/mapbox-gl-js/api/#geojsonsource#setdata
https://docs.mapbox.com/mapbox-gl-js/api/#map#setstyle
https://docs.mapbox.com/help/troubleshooting/working-with-large-geojson-data/

......................................................................
Mapbox docs:

https://docs.mapbox.com/mapbox-gl-js/api/
https://docs.mapbox.com/mapbox-gl-js/api/#popup
https://docs.mapbox.com/mapbox-gl-js/example/query-similar-features/


https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/
https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/#filter


https://docs.mapbox.com/help/tutorials/mapbox-gl-js-expressions/
https://docs.mapbox.com/help/tutorials/studio-heatmap-tutorial/

https://docs.mapbox.com/help/glossary/filter/


https://docs.mapbox.com/help/how-mapbox-works/web-apps/
https://docs.mapbox.com/help/tutorials/building-a-store-locator

https://docs.mapbox.com/mapbox-gl-js/examples/
https://docs.mapbox.com/mapbox-gl-js/example/hover-styles/
https://docs.mapbox.com/mapbox-gl-js/example/canvas-source/
https://docs.mapbox.com/mapbox-gl-js/example/data-join/
https://docs.mapbox.com/mapbox-gl-js/example/live-update-feature/
https://docs.mapbox.com/mapbox-gl-js/example/vector-source/
https://docs.mapbox.com/mapbox-gl-js/example/mapbox-gl-draw/
https://docs.mapbox.com/mapbox-gl-js/example/updating-choropleth/
https://docs.mapbox.com/mapbox-gl-js/example/live-update-feature/

https://docs.mapbox.com/help/tutorials/
https://docs.mapbox.com/help/troubleshooting/
https://docs.mapbox.com/help/troubleshooting/large-data-tippecanoe/
https://docs.mapbox.com/help/troubleshooting/adjust-tileset-zoom-extent/
https://docs.mapbox.com/help/troubleshooting/working-with-large-geojson-data/
https://docs.mapbox.com/help/tutorials/optimization-api/

https://blog.mapbox.com/@Mapbox
https://blog.mapbox.com/visualizing-election-data-a-guide-to-mapbox-gl-expressions-92cc469b8dfd
https://blog.mapbox.com/going-live-with-electoral-maps-a-guide-to-feature-state-b520e91a22d
https://blog.mapbox.com/designing-electoral-maps-exploring-mapbox-gl-js-a7b7db75bd13
http://turfjs.org/



https://www.mapbox.com/mapbox-studio/
https://docs.mapbox.com/studio-manual/overview/
https://blog.cartong.org/wordpress/wp-content/uploads/2020/02/How-to-Using-mapbox-into-PowerBI_CartONG_Final.pdf
http://build-failed.blogspot.com/2017/02/playing-with-mapbox-vector-tiles-part-1.html
https://github.com/mapbox/awesome-vector-tiles


......................................................................
  style: 'mapbox://styles/mapbox/streets-v11',
  // style: 'mapbox://styles/mapbox/satellite-v9',
  // style: 'mapbox://styles/mapbox/dark-v10',
  // style: 'mapbox://styles/mapbox/light-v10',
https://docs.mapbox.com/help/glossary/style-url/
mapbox://styles/mapbox/streets-v11
......................................................................
Data:

https://github.com/johan/world.geo.json
https://catalog.data.gov/dataset
https://simplemaps.com/data
https://simplemaps.com/data/us-cities
https://eric.clst.org/tech/usgeojson/
  https://data.census.gov/cedsci/
  https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html
https://github.com/mapbox/mapboxgl-jupyter
  https://github.com/mapbox/mapboxgl-jupyter/blob/master/examples/data/us-states.geojson
https://github.com/plotly/datasets
https://mygeodata.cloud/

Oops:
- 3193 entries in co-est2019-alldata.csv, 51 are states!
  grep 'COUNTY": "000"' data0/co-est2019-alldata.json| wc -l
    51
- 3221 in uscounties.json. Multi-poly states?
  - id may not be unique now?
  - nope: this produces 3221
      grep '"id"' data/uscounties.json | \
        sed 's/^.*"id"://;s/^"//;s/".*//' | \
        sort | uniq | wc
    no states, this produces no output:
      grep '"id"' data/uscounties.json |
        sed 's/^.*"id"://;s/^"//;s/".*//' |
        sort | uniq | grep '..000'
population check:
grep population data/nmpopulation.json | sed 's/^.*://;s/$/,/'
pop = [677692, 3539, 65459, 26978, 12353, 50199, 2060, 215338, 57437, 28061, 4382, 459, 4371, 70126, 19482, 18356, 24264, 72849, 4563, 65745, 8373, 39307, 19117, 140769, 127455, 28034, 148917, 11135, 17000, 32888, 15595, 4175, 75956]
util.arraySum(pop) => 2092434


http://census.ire.org/data/bulkdata.html
https://wiki.openstreetmap.org/wiki/United_States/American_Indian_reservations

bbox spec: https://tools.ietf.org/html/rfc7946


https://exploratory.io/note/kei/6949005180287436

https://hifld-geoplatform.opendata.arcgis.com/


https://github.com/PublicaMundi/MappingAPI/tree/master/data/geojson
https://github.com/rstudio/leaflet/tree/gh-pages/json


https://www.naturalearthdata.com/downloads/ //shp files, not geojson
https://www.naturalearthdata.com/

https://www.convertcsv.com/csv-to-geojson.htm

http://geojson.io/#map=13/35.6831/-105.9582


https://drive.google.com/drive/folders/1PbuHq59DMuI5XkKvmIcYuElGVVbknX0z
CDC's Social Vulnerability Index (SVI)
  https://svi.cdc.gov/data-and-tools-download.html

......................................................................
Data
uscities.cvs: https://simplemaps.com/data/us-cities
    csv2geojson: geojson; tippecanoe: mbtiles
        5.1M Apr  8 11:01 data/uscities.csv*
         12M Apr 10 12:50 data/uscities.geojson
        2.2M Apr 10 12:50 data/uscities.mbtiles
    bin/tippecanoe -zg -f -l cities -n "Cities Populations" -o data/uscities.mbtiles data/uscities.geojson
fips: fips.txt cut/paste;
    bin/fips2json: fips.json
usstates.geojson uscounties.json:
  https://eric.clst.org/tech/usgeojson/
  states:
  agentscript/bin/minifyjson
population covid19-healthsystemcapacity/data/published/us_healthcare_capacity-county-CovidCareMap.csv
https://github.com/mapbox/csv2geojson for csv => geojson
  https://csvjson.com/ csv to json, not geojson. Useful!
  co-est2019-alldata.csv -> .json
nm pop, from https://github.com/RedfishGroup/GISData/blob/master/popul_byco2018_fromDBF.csv

Sociall Vulnerability Index
https://svi.cdc.gov/data-and-tools-download.html

Downloads data0/ https://eric.clst.org/tech/usgeojson/
us_040: states
-rw-r--r--@ 1 owen  staff   1.4M Apr 16 15:30 gz_2010_us_040_00_20m.json
-rw-r--r--@ 1 owen  staff   2.4M Apr 16 15:30 gz_2010_us_040_00_5m.json
us_050: counties
-rw-r--r--@ 1 owen  staff   3.3M Apr 16 15:30 gz_2010_us_050_00_20m.json
-rw-r--r--@ 1 owen  staff    22M Apr 16 15:30 gz_2010_us_050_00_500k.json
us_500: congressional
-rw-r--r--@ 1 owen  staff   2.6M Apr 16 15:30 gz_2010_us_500_11_20m.json
Uses: https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html

https://www.nrcs.usda.gov/wps/portal/nrcs/detail/?cid=nrcs143_013696
clip | tr '\t' ' ' > data/FIPS.txt
Note: 55 entries but last FIPS number is 78. OK tho, several gaps.

......................................................................
......................................................................
......................................................................
......................................................................
Issues:


- Key problem is that mapbox gl js doesn't use js where you'd like (expressions)

- Filtering on feature ID:
    string ("05") converted to number causing multiple hits in string using "in" expr. Soln is to use an array I suspect
// REMIND: fix, id is numeric!
// filter:
//     states.length === 0
//         ? ['to-boolean', true]
//         : ['in', ['id'], fips],
// : ['==', ['id'], states],

......................................................................
Commits:
......................................................................
git add .
files=`git status | grep '^\t' | egrep -v '(models/scripts|dist/|deleted|yarn)' | sed 's/^.*:  //;s/^.*-> //'`; echo $files | tr ' ' '\n'
gitdiff $files | mate

gitcommit

//////////

Agent/MB first light: test.html
- test.html:
  - add hello model
  - add view
  - add features info to patches
  - add World.bbox transform
  - add geo coords to patches
  - add turtle's current hover feature
  - animate
- tools.js: moved utils from test.html into separate file
- bin/addFeatureID: use state + county fips rather than index
- bin/addPopulation: new, merge population data into nmcounties.geojson
- bin/redfish2pop: new, convert steve's csv to json
- data/nmpopulation.json: json file made from redfish2pop
- data/nmcounties.geojson: add population from above, use fips id
- data/uscounties.json: use fips id

New: test.html: NM counties & MB CanvasSource
- bin/tools: async: mapLoadPromise(map)
- async.html: test of above
- bin/featureFilter (nmcounties etc from uscounties etc)

New: counties.html popup while hovering counties
- counties.html: add popup for county names
- data0/: gitignored dir of original data before modified for MB use
  - mktiles: put large intermediate files in data0/

counties.html: state filter
- bin/fips2json:
  - add both Postal & ID code keys
  - values now include state fips
  - use for expanded data/fips.json
  - add npm runscript to build data/fips.json
- counties.html
  - use above to allow ?NM,AZ,CO filter queryString.
  - add hover from prior test.html

New: centroids.html, first use of turf.js
- data/centroids.json:
  - bin/featureFilter: node script use turf.js to find all us county centroids.
- layer.html: trivial MB layer viewer, for quick tests
  - currently shows data/centroids.json as circles
- package.json: yarn add @turf/turf

New: addFeatureID, test.html hover
- test.html: Use featureState feature for "hover" map mouse
- bin/addFeatureID: add an ID to features for map.setFeatureState
  - data/uscounties.json: add feature id:n

New: counties.html, several data/ files
- bin/fips2json: convert csv to json
- counties.html: show counties and state boundarise
- data:
  - uscounties.json
  - fips.txt
  - fips.json
  - usstates.geojson
......................................................................
